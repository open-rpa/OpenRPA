<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activity_click_to_view" xml:space="preserve">
    <value>Clique duas vezes para ver</value>
  </data>
  <data name="activity_closetab" xml:space="preserve">
    <value>Aba fechada</value>
  </data>
  <data name="activity_closetab_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_closetab_tooltip" xml:space="preserve">
    <value>Feche a guia atual ou feche todas as guias</value>
  </data>
  <data name="activity_displayname" xml:space="preserve">
    <value>Nome de exibição</value>
  </data>
  <data name="activity_displayname_help" xml:space="preserve">
    <value>DisplayName dentro do designer de fluxo de trabalho</value>
  </data>
  <data name="activity_executescript" xml:space="preserve">
    <value>Execute script</value>
  </data>
  <data name="activity_executescript_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_executescript_tooltip" xml:space="preserve">
    <value>Execute o script no navegador, direcionando a guia atual e o quadro padrão</value>
  </data>
  <data name="activity_getelement" xml:space="preserve">
    <value>Get Element</value>
  </data>
  <data name="activity_getelement_async" xml:space="preserve">
    <value>Obtenha o elemento assíncrono</value>
  </data>
  <data name="activity_getelement_async_tooltip" xml:space="preserve">
    <value>Encontre um navegador elementos baseados no seletor</value>
  </data>
  <data name="activity_getelement_drop_hint" xml:space="preserve">
    <value>Atividade de gota</value>
  </data>
  <data name="activity_getelement_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_getelement_highlight" xml:space="preserve">
    <value>Destaque</value>
  </data>
  <data name="activity_getelement_loopaction" xml:space="preserve">
    <value>Ação de loop</value>
  </data>
  <data name="activity_getelement_loopaction_tooltop" xml:space="preserve">
    <value>Faça isso, uma vez feito processando cada resultado, depois executa o seletor e procura novos itens</value>
  </data>
  <data name="activity_getelement_open_selector" xml:space="preserve">
    <value>Seletor aberto</value>
  </data>
  <data name="activity_getelement_tooltip" xml:space="preserve">
    <value>Encontre um elemento do navegador baseado no seletor</value>
  </data>
  <data name="activity_gettab" xml:space="preserve">
    <value>Get Tab</value>
  </data>
  <data name="activity_gettab_helpurl" xml:space="preserve">
    <value>https://OpenRPA.imt-soft.com/en/native-messaging#get-tab</value>
  </data>
  <data name="activity_gettab_tooltip" xml:space="preserve">
    <value>Obtenha a guia atual no Chrome/Edge ou Firefox, não retorne nada se o navegador não estiver correndo</value>
  </data>
  <data name="activity_gettable" xml:space="preserve">
    <value>Obtenha dados da tabela</value>
  </data>
  <data name="activity_gettable_helpurl" xml:space="preserve">
    <value>https://OpenRPA.imt-soft.com/en/native-messaging#get-table</value>
  </data>
  <data name="activity_gettable_tooltip" xml:space="preserve">
    <value>Extração de dados de tabela simples com base em Xpaths</value>
  </data>
  <data name="activity_open_editor" xml:space="preserve">
    <value>Editor aberto</value>
  </data>
  <data name="activity_openurl" xml:space="preserve">
    <value>Abrir URL</value>
  </data>
  <data name="activity_openurl_getcurrent" xml:space="preserve">
    <value>Obtenha atual</value>
  </data>
  <data name="activity_openurl_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_openurl_tooltip" xml:space="preserve">
    <value>Abra o URL especificado no navegador selecionado</value>
  </data>
  <data name="activity_waitfordownload" xml:space="preserve">
    <value>Aguarde o download</value>
  </data>
  <data name="activity_waitfordownload_tooltip" xml:space="preserve">
    <value>Espera que um download seja concluído em um navegador suportado por NM</value>
  </data>
  <data name="activity_waitforready" xml:space="preserve">
    <value>Espere por Ready</value>
  </data>
  <data name="activity_waitforready_help" xml:space="preserve">
    <value>Aguarde a página estar pronta / não está carregando</value>
  </data>
  <data name="compensate_for_old_addon" xml:space="preserve">
    <value>Compensar a extensão antiga</value>
  </data>
  <data name="compensate_for_old_addon_help" xml:space="preserve">
    <value>Adicione a compensação de pixels para o antigo add</value>
  </data>
  <data name="debug_console_output" xml:space="preserve">
    <value>Console de depuração</value>
  </data>
  <data name="debug_console_output_help" xml:space="preserve">
    <value>Escreva informações de depuração no console do navegador</value>
  </data>
  <data name="plugin_detect_html_table" xml:space="preserve">
    <value>Detecte a tabela HTML</value>
  </data>
  <data name="plugin_detect_html_table_help" xml:space="preserve">
    <value>Adicionar automaticamente a tabela Get se clicar na tabela HTML fazendo gravação</value>
  </data>
  <data name="plugin_wait_for_tab_after_set_value" xml:space="preserve">
    <value>Espere após o valor definido</value>
  </data>
  <data name="plugin_wait_for_tab_after_set_value_help" xml:space="preserve">
    <value>Aguarde o status da guia estar no estado pronto depois de definir um valor</value>
  </data>
  <data name="register_old_portname" xml:space="preserve">
    <value>Registre o antigo portname</value>
  </data>
  <data name="register_old_portname_help" xml:space="preserve">
    <value>Registre nomes de portas de extensão do navegador antigo</value>
  </data>
  <data name="unique_xpath_ids" xml:space="preserve">
    <value>Ids únicos</value>
  </data>
  <data name="unique_xpath_ids_help" xml:space="preserve">
    <value>Uso desses atributos como IDs exclusivos ao criar seletores XPath</value>
  </data>
  <data name="wait_for_tab_click" xml:space="preserve">
    <value>Aguarde a guia</value>
  </data>
  <data name="wait_for_tab_click_help" xml:space="preserve">
    <value>Aguarde o status da guia estar no estado pronto depois de clicar em um botão</value>
  </data>
</root>