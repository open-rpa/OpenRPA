<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activity_click_to_view" xml:space="preserve">
    <value>Haga doble clic para ver</value>
  </data>
  <data name="activity_closetab" xml:space="preserve">
    <value>Cerrar pestaña</value>
  </data>
  <data name="activity_closetab_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_closetab_tooltip" xml:space="preserve">
    <value>Cierre la pestaña actual o cierre todas las pestañas</value>
  </data>
  <data name="activity_displayname" xml:space="preserve">
    <value>Nombre para mostrar</value>
  </data>
  <data name="activity_displayname_help" xml:space="preserve">
    <value>DisplayName dentro del diseñador de flujo de trabajo</value>
  </data>
  <data name="activity_executescript" xml:space="preserve">
    <value>Ejecutar script</value>
  </data>
  <data name="activity_executescript_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_executescript_tooltip" xml:space="preserve">
    <value>Ejecutar script en el navegador, orientar la pestaña actual y el marco predeterminado</value>
  </data>
  <data name="activity_getelement" xml:space="preserve">
    <value>Obtener elemento</value>
  </data>
  <data name="activity_getelement_async" xml:space="preserve">
    <value>Obtén Element Async</value>
  </data>
  <data name="activity_getelement_async_tooltip" xml:space="preserve">
    <value>Encuentra elementos de un navegador basados en el selector</value>
  </data>
  <data name="activity_getelement_drop_hint" xml:space="preserve">
    <value>Drop Activity</value>
  </data>
  <data name="activity_getelement_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_getelement_highlight" xml:space="preserve">
    <value>Destacar</value>
  </data>
  <data name="activity_getelement_loopaction" xml:space="preserve">
    <value>Acción de bucle</value>
  </data>
  <data name="activity_getelement_loopaction_tooltop" xml:space="preserve">
    <value>Haga esto, una vez hecho el procesamiento de cada resultado, luego vuelve a ejecutar el selector y busca nuevos elementos</value>
  </data>
  <data name="activity_getelement_open_selector" xml:space="preserve">
    <value>Selector abierto</value>
  </data>
  <data name="activity_getelement_tooltip" xml:space="preserve">
    <value>Encuentra un elemento del navegador basado en el selector</value>
  </data>
  <data name="activity_gettab" xml:space="preserve">
    <value>Obtenga pestaña</value>
  </data>
  <data name="activity_gettab_helpurl" xml:space="preserve">
    <value>https://OpenRPA.imt-soft.com/en/native-messaging#get-tab</value>
  </data>
  <data name="activity_gettab_tooltip" xml:space="preserve">
    <value>Obtenga la pestaña actual en Chrome/Edge o Firefox, no devuelva nada si el navegador no se ejecuta</value>
  </data>
  <data name="activity_gettable" xml:space="preserve">
    <value>Obtener datos de tabla</value>
  </data>
  <data name="activity_gettable_helpurl" xml:space="preserve">
    <value>https://OpenRPA.imt-soft.com/en/native-messaging#get-table</value>
  </data>
  <data name="activity_gettable_tooltip" xml:space="preserve">
    <value>Extracción de datos de tabla simple basada en XPaths</value>
  </data>
  <data name="activity_open_editor" xml:space="preserve">
    <value>Open Editor</value>
  </data>
  <data name="activity_openurl" xml:space="preserve">
    <value>URL abierta</value>
  </data>
  <data name="activity_openurl_getcurrent" xml:space="preserve">
    <value>Obtenga corriente</value>
  </data>
  <data name="activity_openurl_helpurl" xml:space="preserve">
    <value>https://docs.openiap.io/openrpa.html#openrpa-nm</value>
  </data>
  <data name="activity_openurl_tooltip" xml:space="preserve">
    <value>Abra la URL especificada en el navegador seleccionado</value>
  </data>
  <data name="activity_waitfordownload" xml:space="preserve">
    <value>Espera para descargar</value>
  </data>
  <data name="activity_waitfordownload_tooltip" xml:space="preserve">
    <value>Espera una descarga para completar en un navegador compatible con NM</value>
  </data>
  <data name="activity_waitforready" xml:space="preserve">
    <value>Espera listo</value>
  </data>
  <data name="activity_waitforready_help" xml:space="preserve">
    <value>Espere a que la página de la página esté lista / no se está cargando</value>
  </data>
  <data name="compensate_for_old_addon" xml:space="preserve">
    <value>Compensar por la extensión antigua</value>
  </data>
  <data name="compensate_for_old_addon_help" xml:space="preserve">
    <value>Agregar compensación de píxeles para ADD antiguo</value>
  </data>
  <data name="debug_console_output" xml:space="preserve">
    <value>Consola de depuración</value>
  </data>
  <data name="debug_console_output_help" xml:space="preserve">
    <value>Escriba información de depuración en la consola del navegador</value>
  </data>
  <data name="plugin_detect_html_table" xml:space="preserve">
    <value>Detectar la tabla HTML</value>
  </data>
  <data name="plugin_detect_html_table_help" xml:space="preserve">
    <value>Auto agregue la tabla Get si se hace clic en la tabla HTML haciendo grabación</value>
  </data>
  <data name="plugin_wait_for_tab_after_set_value" xml:space="preserve">
    <value>Espera después del valor establecido</value>
  </data>
  <data name="plugin_wait_for_tab_after_set_value_help" xml:space="preserve">
    <value>Espere a que el estado de la pestaña esté listo después de establecer un valor</value>
  </data>
  <data name="register_old_portname" xml:space="preserve">
    <value>Registre el antiguo portname</value>
  </data>
  <data name="register_old_portname_help" xml:space="preserve">
    <value>Registre nombres de puertos de extensión del navegador antiguo</value>
  </data>
  <data name="unique_xpath_ids" xml:space="preserve">
    <value>IDS únicos</value>
  </data>
  <data name="unique_xpath_ids_help" xml:space="preserve">
    <value>Use de estos atributos como ID únicos al crear selectores XPath</value>
  </data>
  <data name="wait_for_tab_click" xml:space="preserve">
    <value>Espera por la pestaña</value>
  </data>
  <data name="wait_for_tab_click_help" xml:space="preserve">
    <value>Espere a que el estado de la pestaña esté listo después de hacer clic en un botón</value>
  </data>
</root>